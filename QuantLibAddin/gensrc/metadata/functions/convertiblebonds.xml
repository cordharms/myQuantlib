<Category name='convertiblebonds'>
    <description>functions to construct and use ConvertibleBond objects.</description>
    <displayName>ConvertibleBonds</displayName>
    <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
    <serializationIncludes>
        <include>qlo/convertiblebonds.hpp</include>
    
  </serializationIncludes>
    <addinIncludes>
        <include>qlo/convertiblebonds.hpp</include>
    
  </addinIncludes>
    <copyright>
        Copyright (C) 2006, 2007 Chiara Fornarola
        Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011 Ferdinando Ametrano
        Copyright (C) 2005, 2006 Eric Ehlers
        Copyright (C) 2005 Plamen Neykov
        Copyright (C) 2005 Walter Penschke
        Copyright (C) 2009 Piter Dias
        Copyright (C) 2020 Peter Kreyssig
    
  </copyright>
  
    <Functions>
    
        <!-- QuantLib::ConvertibleBond inspectors -->
    
        <Constructor name='qlConvertibleZeroCouponBond'>
            <libraryFunction>ConvertibleZeroCouponBond</libraryFunction>
            <SupportedPlatforms>
                <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
                <SupportedPlatform name='Excel'/>
                <SupportedPlatform name='Calc'/>
                <SupportedPlatform name='Cpp'/>
        
      </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='Description' default='std::string()'>
                        <type>string</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Bond description string. Autogenerated if null</description>
            
          </Parameter>
                    <Parameter name='Currency'>
                        <type>QuantLib::Currency</type>
                        <tensorRank>scalar</tensorRank>
                        <description>bond Currency.</description>
            
          </Parameter>
                    <Parameter name='ExerciseID'>
                        <type>QuantLib::Exercise</type>
                        <tensorRank>scalar</tensorRank>
                        <description>bond conversion rights ID.</description>
            
          </Parameter>
                    <Parameter name='ConversionRatio' default='1'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Conversion ratio.</description>
            
          </Parameter>
                    <Parameter name='ConversionType'>
                        <type>QuantLib::Callability::Type</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Conversion type.</description>
                    
                  </Parameter>
                    <Parameter name='DividendSchedule'>
                        <type>QuantLib::FixedDividend</type>
                        <tensorRank>vector</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='CallabilitySchedule'>
                        <type>QuantLib::Callability</type>
                        <tensorRank>vector</tensorRank>
                        <description>Callability schedule.</description>
            
          </Parameter>
                    <Parameter name='CreditSpread'>
                        <type>QuantLib::Quote</type>
                        <superType>libToHandle</superType>
                        <tensorRank>scalar</tensorRank>
                        <description>credit spread object IDs</description>
            
          </Parameter>
                    <Parameter name='IssueDate' default='QuantLib::Date()'>
                        <type>QuantLib::Date</type>
                        <tensorRank>scalar</tensorRank>
                        <description>issue date: the bond can't be traded until then.</description>
            
          </Parameter>
                    <Parameter name='SettlementDays' exampleValue='3'>
                        <type>QuantLib::Natural</type>
                        <tensorRank>scalar</tensorRank>
                        <description>settlement days.</description>
            
          </Parameter>
                    <Parameter name='DayCounter'>
                        <type>QuantLib::DayCounter</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Day counter.</description>
            
          </Parameter>
                    <Parameter name='ScheduleID'>
                        <type>QuantLib::Schedule</type>
                        <superType>libraryClass</superType>
                        <tensorRank>scalar</tensorRank>
                        <description>Coupon schedule dates ID.</description>
            
          </Parameter>
                    <Parameter name='Redemption'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Redemption value.</description>
            
          </Parameter>
          
        </Parameters>
        
      </ParameterList>
      
    </Constructor>
    
        <Constructor name='qlConvertibleFixedCouponBond'>
            <libraryFunction>ConvertibleFixedCouponBond</libraryFunction>
            <SupportedPlatforms>
                <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
                <SupportedPlatform name='Excel'/>
                <SupportedPlatform name='Calc'/>
                <SupportedPlatform name='Cpp'/>
        
      </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='Description' default='std::string()'>
                        <type>string</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Bond description string. Autogenerated if null</description>
            
          </Parameter>
                    <Parameter name='Currency'>
                        <type>QuantLib::Currency</type>
                        <tensorRank>scalar</tensorRank>
                        <description>bond Currency.</description>
            
          </Parameter>
                    <Parameter name='ExerciseID'>
                        <type>QuantLib::Exercise</type>
                        <tensorRank>scalar</tensorRank>
                        <description>bond conversion rights ID.</description>
            
          </Parameter>
                    <Parameter name='ConversionRatio' default='1'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Conversion ratio.</description>
            
          </Parameter>
                    <Parameter name='ConversionType'>
                        <type>QuantLib::Callability::Type</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Conversion type.</description>
                    
          </Parameter>
                    <Parameter name='DividendSchedule'>
                        <type>QuantLib::FixedDividend</type>
                        <tensorRank>vector</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='CallabilitySchedule'>
                        <type>QuantLib::Callability</type>
                        <tensorRank>vector</tensorRank>
                        <description>Callability schedule.</description>
            
          </Parameter>
                    <Parameter name='CreditSpread'>
                        <type>QuantLib::Quote</type>
                        <superType>libToHandle</superType>
                        <tensorRank>scalar</tensorRank>
                        <description>credit spread object IDs</description>
            
          </Parameter>
                    <Parameter name='IssueDate' default='QuantLib::Date()'>
                        <type>QuantLib::Date</type>
                        <tensorRank>scalar</tensorRank>
                        <description>issue date: the bond can't be traded until then.</description>
            
          </Parameter>
                    <Parameter name='SettlementDays' exampleValue='3'>
                        <type>QuantLib::Natural</type>
                        <tensorRank>scalar</tensorRank>
                        <description>settlement days.</description>
            
          </Parameter>
                    <Parameter name='Coupons'>
                        <type>QuantLib::Rate</type>
                        <tensorRank>vector</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='DayCounter'>
                        <type>QuantLib::DayCounter</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Day counter.</description>
            
          </Parameter>
                    <Parameter name='ScheduleID'>
                        <type>QuantLib::Schedule</type>
                        <superType>libraryClass</superType>
                        <tensorRank>scalar</tensorRank>
                        <description>Coupon schedule dates ID.</description>
            
          </Parameter>
                    <Parameter name='Redemption'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description>Redemption value.</description>
            
          </Parameter>
          
        </Parameters>
        
      </ParameterList>
      
    </Constructor>
    
        <Constructor name='qlFixedDividend'>
            <libraryFunction>FixedDividend</libraryFunction>
            <SupportedPlatforms>
                <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
                <SupportedPlatform name='Excel'/>
                <SupportedPlatform name='Calc'/>
                <SupportedPlatform name='Cpp'/>
        
      </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='Amount'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='Date' default='QuantLib::Date()'>
                        <type>QuantLib::Date</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
          
        </Parameters>
        
      </ParameterList>
      
    </Constructor>
    
        <Constructor name='qlCallability'>
            <libraryFunction>Callability</libraryFunction>
            <SupportedPlatforms>
                <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
                <SupportedPlatform name='Excel'/>
                <SupportedPlatform name='Calc'/>
                <SupportedPlatform name='Cpp'/>
        
      </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='Price'>
                        <type>QuantLib::Real</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='PriceType'>
                        <type>QuantLib::Bond::Price::Type</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='CallType'>
                        <type>QuantLib::Callability::Type</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
                    <Parameter name='Date' default='QuantLib::Date()'>
                        <type>QuantLib::Date</type>
                        <tensorRank>scalar</tensorRank>
                        <description></description>
            
          </Parameter>
          
        </Parameters>
        
      </ParameterList>
      
    </Constructor>
       

    </Functions>
  
</Category>